services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        BUILDKIT_INLINE_CACHE: 1
    ports:
      - "${SERVER_PORT:-8080}:8080"
    volumes:
      - h2-data:/app/data
    environment:
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE:-dev}
      - JAVA_OPTS=${JAVA_OPTS:--Xmx192m -Xms96m -XX:+UseSerialGC -XX:MaxRAM=256m -Xss512k -XX:MaxMetaspaceSize=96m -XX:CompressedClassSpaceSize=32m -Xmn64m -XX:+UseG1GC -XX:+UseStringDeduplication}
    deploy:
      resources:
        limits:
          memory: 512m
        reservations:
          memory: 256m
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "2"
    restart: unless-stopped
    networks:
      - app-network

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ssl-certs:/etc/letsencrypt:ro
      - certbot-web:/var/www/certbot
      - nginx-logs:/var/log/nginx
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    environment:
      - NGINX_HOST=${NGINX_HOST:-bina.fernandojunior.com.br}
      - ENVIRONMENT=${ENVIRONMENT:-prod}
      - CERTBOT_EMAIL=${CERTBOT_EMAIL:-fernando.medeiros@gmail.com}
    deploy:
      resources:
        limits:
          memory: 64m
        reservations:
          memory: 32m
    depends_on:
      - app      
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    restart: unless-stopped
    networks:
      - app-network

  certbot:
    image: certbot/certbot:latest
    volumes:
      - ssl-certs:/etc/letsencrypt
      - certbot-web:/var/www/certbot
      - certbot-logs:/var/log/letsencrypt
    environment:
      - CERTBOT_EMAIL=${CERTBOT_EMAIL:-fernando.medeiros@gmail.com}
      - DOMAIN=${NGINX_HOST:-bina.fernandojunior.com.br}
    command: >
      sh -c "
        echo 'üîê Iniciando servi√ßo de renova√ß√£o autom√°tica de certificados...' &&
        trap 'echo \"üõë Parando servi√ßo de certificados...\"; exit 0' TERM INT &&
        while true; do
          echo '‚è∞ Aguardando 12 horas para pr√≥xima verifica√ß√£o...' &&
          sleep 12h &&
          echo 'üîÑ Verificando renova√ß√£o de certificados...' &&
          certbot renew --webroot -w /var/www/certbot --quiet --non-interactive --agree-tos --email $${CERTBOT_EMAIL} &&
          if [ $$? -eq 0 ]; then
            echo '‚úÖ Certificados renovados com sucesso!' &&
            docker exec nginx nginx -s reload 2>/dev/null || echo '‚ö†Ô∏è Nginx n√£o est√° rodando para recarregar'
          else
            echo '‚ùå Falha na renova√ß√£o dos certificados'
          fi
        done
      "
    depends_on:
      - nginx
    networks:
      - app-network
    restart: unless-stopped  

volumes:
  h2-data:
    driver: local
  ssl-certs:
    driver: local
  certbot-web:
    driver: local
  nginx-logs:
    driver: local
  certbot-logs:
    driver: local


networks:
  app-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
