services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        BUILDKIT_INLINE_CACHE: 1
    ports:
      - "${SERVER_PORT:-8080}:8080"
    volumes:
      - h2-data:/app/data
    environment:
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE:-dev}
      - JAVA_OPTS=${JAVA_OPTS:--Xmx192m -Xms96m -XX:+UseSerialGC -XX:MaxRAM=256m -Xss512k -XX:MaxMetaspaceSize=96m -XX:CompressedClassSpaceSize=32m -Xmn64m -XX:+UseG1GC -XX:+UseStringDeduplication}
    deploy:
      resources:
        limits:
          memory: 512m
        reservations:
          memory: 256m
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "2"
    restart: unless-stopped
    networks:
      - app-network

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ssl-certs:/etc/letsencrypt
      - certbot-web:/var/www/certbot
    environment:
      - NGINX_HOST=${NGINX_HOST:-localhost}
      - ENVIRONMENT=${ENVIRONMENT:-dev}
      - CERTBOT_EMAIL=${CERTBOT_EMAIL}
    deploy:
      resources:
        limits:
          memory: 64m
        reservations:
          memory: 32m
    depends_on:
      - app
    networks:
      - app-network

  certbot:
    image: certbot/certbot
    volumes:
      - ssl-certs:/etc/letsencrypt
      - certbot-web:/var/www/certbot
    entrypoint: >
      sh -c "trap exit TERM; while :; do sleep 12h & wait $${!}; certbot renew --webroot -w /var/www/certbot --quiet; done"
    networks:
      - app-network

volumes:
  h2-data:
  ssl-certs:
  certbot-web:

networks:
  app-network:
    driver: bridge
